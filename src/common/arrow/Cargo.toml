[package]
description = "Arrow implementation forked from arrow2 and native format implementation forked from strawboat."
edition = "2021"
license = "Apache-2.0"
name = "databend-common-arrow"
publish = false
version = "0.1.0"

[lib]
doctest = false
test = true

[features]
default = ["arrow-default"]

arrow = ["arrow-buffer", "arrow-schema", "arrow-data", "arrow-array"]

# sample testing of generated arrow data

compute = [
    "compute_concatenate",
]
compute_concatenate = []

serde_types = ["serde", "serde_derive"]
simd = []

arrow-default = [
    "arrow",
    "compute",
    "serde_types",
    "simd",
]

[dependencies]
ahash = { workspace = true }
arrow-array = { workspace = true, optional = true }
arrow-buffer = { workspace = true, optional = true }
arrow-data = { workspace = true, optional = true }
arrow-schema = { workspace = true, optional = true }
bitpacking = { workspace = true }
bytemuck = { workspace = true }
byteorder = { workspace = true }
bytes = { workspace = true }
chrono = { workspace = true }
chrono-tz = { workspace = true, optional = true }
dyn-clone = { workspace = true }
either = { workspace = true }
ethnum = { workspace = true }
foreign_vec = { workspace = true }
hashbrown_v0_14 = { workspace = true }
indexmap = { workspace = true }
log = { workspace = true }
lz4 = { workspace = true }
num = { workspace = true, features = ["std"] }
num-traits = { workspace = true }
opendal = { workspace = true }
ordered-float = { workspace = true }
rand = { workspace = true }
ringbuffer = { workspace = true }
roaring = { workspace = true }
serde = { workspace = true, features = ["rc"], optional = true }
serde_derive = { workspace = true, optional = true }
serde_json = { workspace = true }
simdutf8 = { workspace = true }
snap = { workspace = true }
zstd = { workspace = true }

[dev-dependencies]
# used to test async readers
env_logger = { workspace = true }
flate2 = { workspace = true }
proptest = { workspace = true, default-features = false, features = ["std"] }
quanta = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt", "fs", "io-util"] }
tokio-util = { workspace = true, features = ["compat"] }

[lints]
workspace = true
